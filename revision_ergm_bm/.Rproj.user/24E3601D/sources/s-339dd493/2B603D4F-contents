rm(list=ls())
library(snow)
library(doParallel)
library(foreach)
library(Rcpp)
library(RcppArmadillo)
library(MASS)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")


### set up for parallelization
nprocs = 1
# mp_type = "MPI"
mp_type = "PSOCK"
cl = parallel::makeCluster(nprocs, type=mp_type)
doParallel::registerDoParallel(cl)


#======================================================================
# ACD
#======================================================================
# LikEm2
d = c(400, 1000)
N = c(2000, 5000, 10000)
# DMHLik, ABCLik
# d = c(400, 1000, 2000)
# N = c(5000, 10000)

tuns = matrix(c(rep(d, each = length(N)), rep(N, length(d))), ncol = 2)

d = 1000; N = 5000

for(k in d){
  for(l in N){
    load(paste('simAppxLikEm2d', k, 'N', l, '.RData', sep = ''))
    # load(paste('simAppxLikEm4d', k, 'N', l, '.RData', sep = ''))
    # load(paste('simAppxDMHLikd', k, 'N', l, '.RData', sep = ''))
    # load(paste('simAppxABCLikd', k, 'N', l, '.RData', sep = ''))
    
    ptm = proc.time()[3]
    nth = nrow(appx)
    tn = sapply(1:nth, function(i) sum(th[i,1]==LikEm[,1]))
    repsam = rep(seq_len(nth), tn)
    
    Hmat = appx[repsam,3:5]
    Jmat = appx[repsam,6:8]
    g = -Hmat - Jmat
    
    niter = nrow(Hmat)
    knots = seq(1000, niter, by = 100)
    
    acdLikEm = foreach(n = knots, .combine = 'rbind') %dopar% {
      source('RFtns.R')
      
      # # old
      # Mn = multibm(g[1:n,])
      # sum(abs(Mn$est))
      
      # cosine dissimilarity
      sensitivity = colMeans(-Hmat[1:n,])
      variability = colMeans(Jmat[1:n,])
      ACD(sensitivity, variability)
    }
    timeacdLikEm = proc.time()[3] - ptm
    save(acdLikEm, knots, timeacdLikEm, file = paste('simNewACDLikEm2d', k, 'N', l, '.RData', sep = ''))
    # save(acdLikEm, knots, timeacdLikEm, file = paste('simNewACDLikEm4d', k, 'N', l, '.RData', sep = ''))
    # save(acdLikEm, knots, timeacdLikEm, file = paste('simNewACDDMHLikd', k, 'N', l, '.RData', sep = ''))
    # save(acdLikEm, knots, timeacdLikEm, file = paste('simNewACDABCLikd', k, 'N', l, '.RData', sep = ''))
  }
}

