Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
#======================================================================
# call data and functions
#======================================================================
load("data/simERGM.RData")
# load("data/sim2ERGM.RData")
#======================================================================
# Liang
#======================================================================
Nin = 2
# Nin = 3
# Nin = 4
Niter = 1000
th = matrix(hat, 1, 2)
sourceCpp("RcppFtns.cpp")
ptm = proc.time()[3]
Liang = ergmDMH(X, COV, th, Niter, Nin)[-1,]
timeLiang = proc.time()[3] - ptm
timeLiang / Niter * 250000 / 60
rm(list=ls())
library(coda)
# library(ergm)
library(Rcpp)
library(RcppArmadillo)
library(MASS)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
#======================================================================
# call data and functions
#======================================================================
load("data/simERGM.RData")
# load("data/sim2ERGM.RData")
#======================================================================
# Liang
#======================================================================
# Nin = 2
Nin = 3
# Nin = 4
Niter = 1000
th = matrix(hat, 1, 2)
sourceCpp("RcppFtns.cpp")
ptm = proc.time()[3]
Liang = ergmDMH(X, COV, th, Niter, Nin)[-1,]
timeLiang = proc.time()[3] - ptm
timeLiang / Niter * 250000 / 60
rm(list=ls())
library(coda)
# library(ergm)
library(Rcpp)
library(RcppArmadillo)
library(MASS)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
#======================================================================
# call data and functions
#======================================================================
load("data/simERGM.RData")
# load("data/sim2ERGM.RData")
#======================================================================
# Liang
#======================================================================
# Nin = 2
# Nin = 3
Nin = 4
Niter = 1000
th = matrix(hat, 1, 2)
sourceCpp("RcppFtns.cpp")
ptm = proc.time()[3]
Liang = ergmDMH(X, COV, th, Niter, Nin)[-1,]
timeLiang = proc.time()[3] - ptm
timeLiang / Niter * 250000 / 60
rm(list=ls())
library(dplyr); library(ggplot2); library(egg); library(gridExtra); library(grid)
library(batchmeans)
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
al = 0.01
n = 250000
load(paste0('ACDAIKS/Liang/n', n, '/simAIKSLiang', 1, '.RData'))
aiksCutoff = quantile(aiksBootLiang, 1-al)
timeaiksLiang/60
rm(list=ls())
library(fields); library(lattice)
library(Rcpp); library(RcppArmadillo)
library(coda); library(xtable)
library(doParallel); library(foreach)
library(tidyverse); library(egg)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
# ========================================================================
# plot
# ========================================================================
load('choosenN/choose_N.RData')
load('choosenN/choose_n.RData')
plot_aiksN = datN %>%
filter(Name %in% paste0('u', 1:2), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(a) '*u(theta)))
plot_acdN = datN %>%
filter(Name %in% paste0('d', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(b) '*d(theta)))
plot_acdn = datn %>%
filter(Name %in% paste0('V', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*V))
plot.blank = ggplot() + theme_void()
plot_aiksN_blank = ggarrange(plot_aiksN, plot.blank, nrow = 1, widths = c(1.92, 1))
plot.final = grid.arrange(plot_aiksN_blank, plot_acdN, plot_acdn, ncol = 1)
ggsave(plot = plot.final, width = 9.2, height = 7, filename = 'figures_paper/ergmChoosenN.eps')
plot_acdn = datn %>%
filter(Name %in% paste0('V', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*Sigma))
plot.blank = ggplot() + theme_void()
plot_aiksN_blank = ggarrange(plot_aiksN, plot.blank, nrow = 1, widths = c(1.92, 1))
plot.final = grid.arrange(plot_aiksN_blank, plot_acdN, plot_acdn, ncol = 1)
ggsave(plot = plot.final, width = 9.2, height = 7, filename = 'figures_paper/ergmChoosenN.eps')
load("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/ACDAIKS/Liang/simAppxLiang20.RData")
rm(list=ls())
library(fields); library(lattice)
library(Rcpp); library(RcppArmadillo)
library(coda); library(xtable)
library(doParallel); library(foreach)
library(tidyverse); library(egg)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
# ========================================================================
# plot
# ========================================================================
load('choosenN/choose_N.RData')
load('choosenN/choose_n.RData')
datn$Name = factor(datn$Name, levels = paste0('V', 1:3), labels = c(paste0('S1', 1:3)))
plot_aiksN = datN %>%
filter(Name %in% paste0('u', 1:2), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(a) '*u(theta)))
plot_acdN = datN %>%
filter(Name %in% paste0('d', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(b) '*d(theta)))
plot_acdn = datn %>%
filter(Name %in% paste0('S1', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*Sigma))
plot.blank = ggplot() + theme_void()
plot_aiksN_blank = ggarrange(plot_aiksN, plot.blank, nrow = 1, widths = c(1.92, 1))
plot.final = grid.arrange(plot_aiksN_blank, plot_acdN, plot_acdn, ncol = 1)
ggsave(plot = plot.final, width = 9.2, height = 7, filename = 'figures_paper/ergmChoosenN.eps')
# ========================================================================
# plot
# ========================================================================
load('choosenN/choose_N.RData')
load('choosenN/choose_n.RData')
datn$Name = factor(datn$Name, levels = paste0('V', 1:3), labels = c('S11', 'S12', 'S22'))
plot_aiksN = datN %>%
filter(Name %in% paste0('u', 1:2), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(a) '*u(theta)))
plot_acdN = datN %>%
filter(Name %in% paste0('d', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(b) '*d(theta)))
plot_acdn = datn %>%
filter(Name %in% paste0('S1', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*Sigma))
plot_acdn = datn %>%
filter(Name %in% c('S11', 'S12', 'S22'), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*Sigma))
plot.blank = ggplot() + theme_void()
plot_aiksN_blank = ggarrange(plot_aiksN, plot.blank, nrow = 1, widths = c(1.92, 1))
plot.final = grid.arrange(plot_aiksN_blank, plot_acdN, plot_acdn, ncol = 1)
ggsave(plot = plot.final, width = 9.2, height = 7, filename = 'figures_paper/ergmChoosenN.eps')
load("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/ACDAIKS/Liang/simAppxLiang20.RData")
load("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/ACDAIKS/Liang/simAppxLiang20.RData")
timeappx/60/60
timeappx/60/60/24
timeappx/14*25/60/60/24
timeappx/14*(25-14)/60/60/24
313-295+1
rm(list=ls())
library(fields)
library(lattice)
library(coda)
library(Rcpp)
library(RcppArmadillo)
library(xtable)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
#================================================================
# ACD using biased but consistent approximations
#================================================================
mm = 1:5
n = 250000
N = 200000
for(Nin in mm){
load(paste0('ACDAIKS/Liang/simAppxLiang', Nin, '.RData'))
# ACD -----------------------------------------------------
nchains = length(appx)
D = foreach(i = 1:nchains) %do% { appx[[i]][,3:5] }
nrep = foreach(i = 1:nchains) %do% { sapply(1:nth[i], function(j) sum(th[[i]][j,1]==Liang[[i]][,1])) }
D = foreach(i = 1:nchains, .combine = rbind) %do% { sapply(1:3, function(j) rep(D[[i]][,j], nrep[[i]])) }
source('RFtns.R')
ptm = proc.time()[3]
acdLiang = ACD_bm(D[1:n,], N)
timeacdLiang = proc.time()[3] - ptm
cat('m =', Nin, ': ', acdLiang, '(', qchisq(0.99, 3), ')\n')
save(acdLiang, timeacdLiang, file = paste0('ACDAIKS/Liang/n', n, '/simACDLiang', Nin, '.RData'))
}
source("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/RFtns.R", echo=TRUE)
rm(list=ls())
library(fields)
library(lattice)
library(coda)
library(Rcpp)
library(RcppArmadillo)
library(xtable)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
#================================================================
# ACD using biased but consistent approximations
#================================================================
mm = 1:5
n = 250000
N = 200000
for(Nin in mm){
load(paste0('ACDAIKS/Liang/simAppxLiang', Nin, '.RData'))
# ACD -----------------------------------------------------
nchains = length(appx)
D = foreach(i = 1:nchains) %do% { appx[[i]][,3:5] }
nrep = foreach(i = 1:nchains) %do% { sapply(1:nth[i], function(j) sum(th[[i]][j,1]==Liang[[i]][,1])) }
D = foreach(i = 1:nchains, .combine = rbind) %do% { sapply(1:3, function(j) rep(D[[i]][,j], nrep[[i]])) }
source('RFtns.R')
ptm = proc.time()[3]
acdLiang = ACD_bm(D[1:n,], N)
timeacdLiang = proc.time()[3] - ptm
cat('m =', Nin, ': ', acdLiang, '(', qchisq(0.99, 3), ')\n')
save(acdLiang, timeacdLiang, file = paste0('ACDAIKS/Liang/n', n, '/simACDLiang', Nin, '.RData'))
}
rm(list=ls())
library(dplyr); library(ggplot2); library(egg); library(gridExtra); library(grid)
library(batchmeans)
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
al = 0.01
n = 250000
load(paste0('ACDAIKS/Liang/n', n, '/simAIKSLiang', 1, '.RData'))
aiksCutoff = quantile(aiksBootLiang, 1-al)
# ==============================================================================
# DMH
# ==============================================================================
diagLiang = data.frame()
m = 1:5
# m = 1:4
for(i in m){
### ACD
load(paste0('ACDAIKS/Liang/n', n, '/simACDLiang', i, '.RData'))
df = data.frame(Method = 'ACD', Algorithm = 'DMH', m = as.factor(i), Value = acdLiang,
Below = ifelse(acdLiang < qchisq(1-al, 3), TRUE, FALSE))
diagLiang = rbind(diagLiang, df)
### AIKS
load(paste0('ACDAIKS/Liang/n', n, '/simAIKSLiang', i, '.RData'))
df = data.frame(Method = 'AIKS', Algorithm = 'DMH', m = as.factor(i), Value = aiksLiang,
Below = ifelse(aiksLiang < aiksCutoff, TRUE, FALSE))
diagLiang = rbind(diagLiang, df)
### ESS
load(paste0('ACDAIKS/Liang/simLiang', i, '.RData'))
df = data.frame(Method = 'ESS', Algorithm = 'DMH', m = as.factor(i),
Value = round(min(apply(Liang[burnin+1:n,], 2, ess))),
Below = NA)
diagLiang = rbind(diagLiang, df)
}
diagLiang
# ==============================================================================
# plot
# ==============================================================================
# ------------------------------------------------------------------------------
# ESS
# ------------------------------------------------------------------------------
plotESSLiang = diagLiang %>%
filter(Method == 'ESS') %>%
ggplot(aes(m, Value, group = 1)) +
geom_point(size = 2, shape = 16) +
geom_line(color = 'gray45') +
coord_cartesian(ylim = c(NA, 17000)) +
labs(x = 'm', y = 'Minimum ESS')
# ------------------------------------------------------------------------------
# ACD
# ------------------------------------------------------------------------------
plotACDLiang = diagLiang %>%
filter(Method == 'ACD') %>%
ggplot(aes(m, Value, group = 1)) +
geom_point(aes(shape = Below, color = Below), size = 2) +
scale_shape_manual(values = c('FALSE' = 17, 'TRUE' = 15)) +
geom_line(color = 'gray45') +
geom_hline(yintercept = qchisq(1-al, 3), linetype = 2) +
labs(x = 'm', y = 'ACD') +
theme(legend.position = 'none')
# ------------------------------------------------------------------------------
# AIKS
# ------------------------------------------------------------------------------
plotAIKSLiang = diagLiang %>%
filter(Method == 'AIKS') %>%
ggplot(aes(m, Value, group = 1)) +
geom_point(aes(shape = Below, color = Below), size = 2) +
scale_shape_manual(values = c('FALSE' = 17, 'TRUE' = 15)) +
geom_line(color = 'gray45') +
geom_hline(yintercept = aiksCutoff, linetype = 2) +
labs(x = 'm', y = 'AIKS') +
# labs(x = 'm', y = 'AIKS', title = 'DMH') +
theme(legend.position = 'none')
# ------------------------------------------------------------------------------
# Combine plots
# ------------------------------------------------------------------------------
# plotDiag = ggarrange(plotESSLiang, plotACDLiang, plotAIKSLiang, nrow = 1, top = grid::textGrob('DMH: Diagnostics', gp = gpar(fontsize = 13), x = 0.05, hjust = 0))
plotDiag = ggarrange(plotESSLiang, plotACDLiang, plotAIKSLiang, nrow = 1)
ggsave(plot = plotDiag,
filename = paste0('figures_paper/ergmDiag', 100*(1-al), '.eps'),
width = 6.2, height = 2)
ggsave(plot = plotDiag,
filename = paste0('figures_paper/ergmDiag', 100*(1-al), '.eps'),
width = 6.2, height = 2)
rm(list=ls())
library(fields); library(lattice)
library(Rcpp); library(RcppArmadillo)
library(coda); library(xtable)
library(doParallel); library(foreach)
library(tidyverse); library(egg)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
# ========================================================================
# plot
# ========================================================================
load('choosenN/choose_N.RData')
load('choosenN/choose_n.RData')
datn$Name = factor(datn$Name, levels = paste0('V', 1:3), labels = c('S11', 'S12', 'S22'))
plot_aiksN = datN %>%
filter(Name %in% paste0('u', 1:2), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(a) '*u(theta)))
plot_acdN = datN %>%
filter(Name %in% paste0('d', 1:3), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'N', y = 'Approximation', title = expression('(b) '*d(theta)))
plot_acdn = datn %>%
filter(Name %in% c('S11', 'S12', 'S22'), Knot > 1000) %>%
ggplot(aes(Knot, Value)) +
geom_line() +
facet_wrap(~Name, nrow = 1, scales = 'free') +
labs(x = 'n', y = 'Approximation', title = expression('(c) '*Sigma))
plot.blank = ggplot() + theme_void()
plot_aiksN_blank = ggarrange(plot_aiksN, plot.blank, nrow = 1, widths = c(1.92, 1))
plot.final = grid.arrange(plot_aiksN_blank, plot_acdN, plot_acdn, ncol = 1)
ggsave(plot = plot.final, width = 9.2, height = 7, filename = 'figures_paper/ergmChoosenN.eps')
load("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/ACDAIKS/Liang/simAppxLiang20.RData")
rm(list=ls())
library(fields)
library(lattice)
library(coda)
library(Rcpp)
library(RcppArmadillo)
library(xtable)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
#================================================================
# ACD using biased but consistent approximations
#================================================================
# mm = 1:5
mm = 20
n = 250000
for(Nin in mm){
load(paste0('ACDAIKS/Liang/simAppxLiang', Nin, '.RData'))
# ACD -----------------------------------------------------
nchains = length(appx)
D = foreach(i = 1:nchains) %do% { appx[[i]][,3:5] }
nrep = foreach(i = 1:nchains) %do% { sapply(1:nth[i], function(j) sum(th[[i]][j,1]==Liang[[i]][,1])) }
D = foreach(i = 1:nchains, .combine = rbind) %do% { sapply(1:3, function(j) rep(D[[i]][,j], nrep[[i]])) }
source('RFtns.R')
ptm = proc.time()[3]
acdLiang = ACD_bm(D[1:n,], N)
timeacdLiang = proc.time()[3] - ptm
cat('m =', Nin, ': ', acdLiang, '(', qchisq(0.99, 3), ')\n')
save(acdLiang, timeacdLiang, file = paste0('ACDAIKS/Liang/n', n, '/simACDLiang', Nin, '.RData'))
}
rm(list=ls())
library(fields)
library(lattice)
library(coda)
library(Rcpp)
library(RcppArmadillo)
library(xtable)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
#================================================================
# ACD using biased but consistent approximations
#================================================================
# mm = 1:5
mm = 20
n = 250000
N = 200000
for(Nin in mm){
load(paste0('ACDAIKS/Liang/simAppxLiang', Nin, '.RData'))
# ACD -----------------------------------------------------
nchains = length(appx)
D = foreach(i = 1:nchains) %do% { appx[[i]][,3:5] }
nrep = foreach(i = 1:nchains) %do% { sapply(1:nth[i], function(j) sum(th[[i]][j,1]==Liang[[i]][,1])) }
D = foreach(i = 1:nchains, .combine = rbind) %do% { sapply(1:3, function(j) rep(D[[i]][,j], nrep[[i]])) }
source('RFtns.R')
ptm = proc.time()[3]
acdLiang = ACD_bm(D[1:n,], N)
timeacdLiang = proc.time()[3] - ptm
cat('m =', Nin, ': ', acdLiang, '(', qchisq(0.99, 3), ')\n')
save(acdLiang, timeacdLiang, file = paste0('ACDAIKS/Liang/n', n, '/simACDLiang', Nin, '.RData'))
}
load("/storage/work/b/bxk487/diagnostics/revision_ergm_bm/ACDAIKS/Liang/n250000/simAIKSLiang20.RData")
aiksLiang
rm(list=ls())
library(fields)
library(lattice)
library(coda)
library(Rcpp)
library(RcppArmadillo)
library(xtable)
library(snow)
library(doParallel)
library(foreach)
Sys.setenv("PKG_CXXFLAGS"="-fopenmp")
Sys.setenv("PKG_LIBS"="-fopenmp")
source("RFtns.R")
#================================================================
# ACD using biased but consistent approximations
#================================================================
mm = c(1:5, 20)
n = 200000
# n = 250000
N = 200000
for(Nin in mm){
load(paste0('ACDAIKS/Liang/simAppxLiang', Nin, '.RData'))
# ACD -----------------------------------------------------
nchains = length(appx)
D = foreach(i = 1:nchains) %do% { appx[[i]][,3:5] }
nrep = foreach(i = 1:nchains) %do% { sapply(1:nth[i], function(j) sum(th[[i]][j,1]==Liang[[i]][,1])) }
D = foreach(i = 1:nchains, .combine = rbind) %do% { sapply(1:3, function(j) rep(D[[i]][,j], nrep[[i]])) }
source('RFtns.R')
ptm = proc.time()[3]
acdLiang = ACD_bm(D[1:n,], N)
timeacdLiang = proc.time()[3] - ptm
cat('m =', Nin, ': ', acdLiang, '(', qchisq(0.99, 3), ')\n')
save(acdLiang, timeacdLiang, file = paste0('ACDAIKS/Liang/n', n, '/simACDLiang', Nin, '.RData'))
}
