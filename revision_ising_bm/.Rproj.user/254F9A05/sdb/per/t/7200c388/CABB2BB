{
    "collab_server" : "",
    "contents" : "rm(list=ls())\nlibrary(coda)\nlibrary(ergm)\nlibrary(Rcpp)\nlibrary(RcppArmadillo)\nlibrary(MASS)\nlibrary(snow)\nlibrary(doParallel)\nlibrary(foreach)\nSys.setenv(\"PKG_CXXFLAGS\"=\"-fopenmp\")\nSys.setenv(\"PKG_LIBS\"=\"-fopenmp\")\n\n\nset.seed(123)\n#======================================================================\n# Call data and functions\n#======================================================================\nload(\"isingData020.RData\")\nload(\"Liang020.RData\")\nload(\"zLiang020In1Perf.RData\")\nz2 = zLiangIn1[,2]; rm(zLiangIn1, timezLiangIn1)\n# source(\"RFtns.R\")\n# sourceCpp(\"RcppFtns.cpp\")\n\n\n\n#======================================================================\n# IMQ KSD\n#======================================================================\n### empirical distribution for the sample\nLiang = Liang[[which(Nin == 1)]]\nth = unique(Liang)\nnth = nrow(th)\n\n\n### compute approximate IMQ KSD\nN = 1000 # the number of simulated datasets used to approximate the score Sxistic\nc = 1\nbeta = -1/2\nregint = seq(1000, nrow(Liang), by = 100)\nidx = sapply(1:length(regint), function(i) which(Liang[regint,1][i] == th[,1]))\n\n\n\n# set up for parallelization\nnprocs = 19\n# mp_type = \"MPI\"\nmp_type = \"PSOCK\"\ncl = parallel::makeCluster(nprocs, type=mp_type)\ndoParallel::registerDoParallel(cl)\n\n\n\n# compute approximate knots\nptm = proc.time()[3]\nknot = foreach::foreach(i = 1:nth, .combine = cbind) %dopar% {\n  k0 = rep(0, nth)\n  for(ip in 1:nth){\n    bthi = Sx-z2[i]\n    bthip = Sx-z2[ip]\n    temp = c^2 + (th[i,] - th[ip,])^2\n    temp2 = th[i,]-th[ip,]\n    kn = temp^beta\n    knthi = 2*beta*(temp^(beta-1))*temp2\n    knthip = -knthi\n    knthithip = -2*beta*(temp^(beta-2))*(2*(temp2^2)*(beta-1)+temp)\n    \n    k0[ip] = bthi*bthip*kn + bthi*knthip + bthip*knthi + knthithip\n  }\n  k0\n}\ntimeknot = proc.time()[3] - ptm\n\n\n\n# compute approximate IMQ KSD\nptm = proc.time()[3]\naKSDLiangIn1 = foreach::foreach(k = idx, .combine = 'c') %dopar% {\n  j = which(idx == k)\n  n = regint[j]\n  qn = sapply(1:k, function(i) sum(Liang[1:n,1]==th[i,1])/n)\n  w = sqrt(t(qn) %*% knot[1:k, 1:k] %*% qn )[1,1]\n  sqrt(w^2) # L2 norm\n}\ntimeaKSDLiangIn1 = proc.time()[3] - ptm\nsave(timeknot, aKSDLiangIn1, timeaKSDLiangIn1, file = \"ksdLiang020In1.RData\")\n\n\n# plot(regint, aKSDLiangIn1, type = \"l\")\n\n",
    "created" : 1600875805803.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "996318906",
    "id" : "CABB2BB",
    "lastKnownWriteTime" : 1600876014,
    "last_content_update" : 1600876014001,
    "path" : "/storage/work/b/bxk487/approxKSD/ising/ksdLiangIn1.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}