{
    "collab_server" : "",
    "contents" : "rm(list=ls())\nlibrary(tidyverse)\nlibrary(gridExtra)\nget_legend<-function(myggplot){\n  tmp <- ggplot_gtable(ggplot_build(myggplot))\n  leg <- which(sapply(tmp$grobs, function(x) x$name) == \"guide-box\")\n  legend <- tmp$grobs[[leg]]\n  return(legend)\n}\n\n# ===================================================\n# Data preparation for Godambe and AIKSD\n# ===================================================\nm = c(1, 5, 50, 100)\n# m = c(5, 50, 100)\nburnIn = 10000\n\n### B2 ----------------------------------------------\nb2 = data.frame()\nfor(i in 1:length(m)){\n  load(paste(\"simB2LiangIn\", m[i], \".RData\", sep = \"\"))\n  df = data.frame(Algorithm = \"DMH\", Tuning = paste(\"m=\", m[i], sep = \"\"), Inv = bart[,1], InvMod = bart[,2], Dif = bart[,3], Knots = burnIn + regint)\n  b2 = rbind(b2, df)\n}\nload(\"simB2Murray.RData\")\ndf = data.frame(Algorithm = \"Exchange\", Tuning = NA, Inv = bart[,1], InvMod = bart[,2], Dif = bart[,3], Knots = burnIn + regint)\nb2 = rbind(b2, df)\n\n\n\n\n### AIKSD ----------------------------------------------\naIKSD = data.frame()\nfor(i in 1:length(m)){\n  load(paste(\"simAIKSDLiangIn\", m[i], \".RData\", sep = \"\"))\n  df = data.frame(Algorithm = \"DMH\", Tuning = paste(\"m=\", m[i], sep = \"\"), Values = aiksd, Knots = burnIn + regint)\n  aIKSD = rbind(aIKSD, df)\n}\nload(\"simAIKSDMurray.RData\")\ndf = data.frame(Algorithm = \"Exchange\", Tuning = NA, Values = aiksd, Knots = burnIn + regint)\naIKSD = rbind(aIKSD, df)\n\n\n\n\n\n\n# ===================================================\n# Visualization\n# ===================================================\n# ylimit = b2 %>%\n#   summarise(InvUp = max(Inv), DifUp = max(Dif))\n# ylimit = unlist(ylimit)\n\nylimit = c(0.7, 1500)\n\n### B2 - H^{-1}J - I ----------------------------------------------\npInv = ggplot(b2, aes(x = Knots, y = Inv)) +\n  geom_line(aes(color = Tuning, linetype = Algorithm)) +\n  coord_cartesian(ylim = c(0, ylimit[1])) +\n  # coord_cartesian(ylim = c(0, NA)) +\n  labs(title = expression(\"A=B. ||\"*H^-1*J - I*\"||\"), x = \"The number of sample points\", y = \"Values\")\n\npDif = ggplot(b2, aes(x = Knots, y = Dif)) +\n  geom_line(aes(color = Tuning, linetype = Algorithm)) +\n  # coord_cartesian(ylim = c(0, ylimit[2])) +\n  coord_cartesian(ylim = c(0, NA)) +\n  labs(title = expression(\"E=F. ||\"*H - J*\"||\"), x = \"The number of sample points\", y = \"Values\") +\n  theme(legend.position=\"none\")\n\n\n### B2 - J^{-1}H - I ----------------------------------------------\npInvMod = ggplot(b2, aes(x = Knots, y = InvMod)) +\n  geom_line(aes(color = Tuning, linetype = Algorithm)) +\n  coord_cartesian(ylim = c(0, ylimit[1])) +\n  # coord_cartesian(ylim = c(0, NA)) +\n  labs(title = expression(\"C=D. ||\"*J^-1*H - I*\"||\"), x = \"The number of sample points\", y = \"Values\") +\n  theme(legend.position=\"none\")\n\n\n### save the legend\nleg = get_legend(pInv)\n\n### Remove the legend\npInv = pInv + theme(legend.position=\"none\")\n\n### Arrange ggplot2 graphs with a specific width\n# grid.arrange(pInv, pInvMod, leg,\n#              layout_matrix = matrix(c(1, 2, 3), ncol = 3, byrow = T), widths = c(2.5, 2.5, 1.5))\n\ngrid.arrange(pInv, pInvMod, pDif, leg,\n             layout_matrix = matrix(c(1, 2, 3, 4), ncol = 4, byrow = T), widths = c(2.5, 2.5, 2.5, 1))\n\ngrid.arrange(pInv, pInvMod, leg,\n             layout_matrix = matrix(c(1, 2, 3), ncol = 3, byrow = T), widths = c(2.3, 2.3, 0.6))\n\n\n\n### AIKSD ----------------------------------------------\npAIKSD = ggplot(aIKSD, aes(x = Knots, y = Values)) +\n  geom_line(aes(color = Tuning, linetype = Algorithm)) +\n  coord_cartesian(ylim = c(0, NA)) +\n  labs(title = \"AIKSD\", x = \"The number of sample points\", y = \"Discrepancy\")\n  # labs(x = \"The number of sample points\", y = \"Discrepancy\")\n\npAIKSD\n\n\n\n### B2 and AIKSD ----------------------------------------------\n# Remove the legend\npAIKSD = pAIKSD + theme(legend.position=\"none\")\n\ngrid.arrange(pInv, pAIKSD, leg, ncol = 3, widths = c(2.3, 2.3, 0.6))\n\ngrid.arrange(pInvMod, pAIKSD, leg, ncol = 3, widths = c(2.3, 2.3, 0.6))\n\ngrid.arrange(pDif, pAIKSD, leg, ncol = 3, widths = c(2.3, 2.3, 0.6))\n\n\n\n",
    "created" : 1607899120386.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2396520585",
    "id" : "C38C616C",
    "lastKnownWriteTime" : 1608094807,
    "last_content_update" : 1608094807165,
    "path" : "~/work/diagnostics/ising/plotting.R",
    "project_path" : "plotting.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}